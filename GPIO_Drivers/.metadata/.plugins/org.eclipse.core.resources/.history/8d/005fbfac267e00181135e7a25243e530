/*
 * stm32f4xx_gpio_driver.h
 *
 *  Created on: Jun 24, 2018
 *      Author: huzaifaasif
 */

#ifndef STM32F4XX_HAL_DRIVER_INC_STM32F4XX_GPIO_DRIVER_H_
#define STM32F4XX_HAL_DRIVER_INC_STM32F4XX_GPIO_DRIVER_H_
#include "stm32f401xe.h"

#define GPIO_BUTTON_PIN				(uint16_t) 0x13
/*
 * 		MACROS used for GPIO PIN INITIALIZATION
 */

//GPIO Mode Setting values
#define GPIO_PIN_INPUT_MODE 			(uint32_t) 0x00
#define GPIO_PIN_OUTPUT_MODE			(uint32_t) 0x01
#define GPIO_PIN_ALT_FUN_MODE 		(uint32_t) 0x10

//GPIO Port Output Type
#define GPIO_PUSH_PULL				(uint32_t) 0x00
#define GPIO_OPEN_DRAIN				(uint32_t) 0x01

//GPIO OUTPUT SPEED
#define GPIO_LOW_SPEED				(uint32_t) 0x00
#define GPIO_MEDIUM_SPEED			(uint32_t) 0x01
#define GPIO_FAST_SPEED				(uint32_t) 0x10
#define GPIO_HIGH_SPEED				(uint32_t) 0x11

//GPIOI PUPD
#define GPIO_NO_PUPD					(uint32_t) 0x00
#define GPIO_PULL_UP					(uint32_t) 0x01
#define GPIO_PULL_DOWN				(uint32_t) 0x10

//ENABLE CLOCKS
#define _HAL_RCC_GPIOA_CLK_ENABLE() 	RCC->AHB1ENR |= (1 << 0)
#define _HAL_RCC_GPIOB_CLK_ENABLE() 	RCC->AHB1ENR |= (1 << 1)
#define _HAL_RCC_GPIOC_CLK_ENABLE() 	RCC->AHB1ENR |= (1 << 2)
#define _HAL_RCC_GPIOD_CLK_ENABLE() 	RCC->AHB1ENR |= (1 << 3)
#define _HAL_RCC_GPIOE_CLK_ENABLE() 	RCC->AHB1ENR |= (1 << 4)
#define _HAL_RCC_GPIOH_CLK_ENABLE() 	RCC->AHB1ENR |= (1 << 6)

/*
 * 		DATA STRUCTURE FOR GPIO PIN INITIALIZATION
 *
 * 		GPIO PIN configuration structure
 * 		This struct will be filled and passed to driver by the application to initialize
 * 		the gpio pin
 */

typedef struct{
	uint16_t pin;
	uint32_t mode;
	uint32_t speed;
	uint32_t pull;
	uint16_t op_type;
	uint32_t alternate;

}GPIO_PIN_CONFIG;

typedef enum{
	INT_RISING_EDGE,
	INT_FALLING_EDGE,
	INT_RISING_FALLING_EDGE
}int_edge_select;

/*
 * INTERRUPTS
 */
void hal_gpio_configure_interrupt(uint16_t pin_no, int_edge_select edge_sel);
void hal_gpio_enable_interrupt(uint16_t pin_no, IRQn_Type irq_no);
void hal_gpio_clear_interrupts(uint16_t pin);


/*
 *
 * 		DRIVER EXPOSED APIs
 *
 *
*/

//Initializes the GPIO pin
void hal_gpio_init(GPIO_TypeDef *GPIOx, GPIO_PIN_CONFIG *gpio_pin);

//read value from the specified pin number
uint8_t hal_gpio_read_from_pin(GPIO_TypeDef *GPIOx, uint16_t pin);

//write a value to the specified pin number
void hal_gpio_write_to_pin(GPIO_TypeDef *GPIOx, uint8_t val, uint16_t pin);

//set alternate functionality for the specified pin
void hal_gpio_alt_function(GPIO_TypeDef *GPIOx, uint16_t pin, uint32_t alt_fun);

#endif /* STM32F4XX_HAL_DRIVER_INC_STM32F4XX_GPIO_DRIVER_H_ */
